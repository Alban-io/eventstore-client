<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ClientMessageDtos.proto

namespace Rxnet\EventStore\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>Rxnet.EventStore.Data.ResolvedEvent</code>
 */
class ResolvedEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.Rxnet.EventStore.Data.EventRecord event = 1;</code>
     */
    private $event = null;
    /**
     * <code>.Rxnet.EventStore.Data.EventRecord link = 2;</code>
     */
    private $link = null;
    /**
     * <code>int64 commit_position = 3;</code>
     */
    private $commit_position = 0;
    /**
     * <code>int64 prepare_position = 4;</code>
     */
    private $prepare_position = 0;

    public function __construct() {
        \GPBMetadata\ClientMessageDtos::initOnce();
        parent::__construct();
    }

    /**
     * <code>.Rxnet.EventStore.Data.EventRecord event = 1;</code>
     */
    public function getEvent()
    {
        return $this->event;
    }

    /**
     * <code>.Rxnet.EventStore.Data.EventRecord event = 1;</code>
     */
    public function setEvent(&$var)
    {
        GPBUtil::checkMessage($var, \Rxnet\EventStore\Data\EventRecord::class);
        $this->event = $var;
    }

    /**
     * <code>.Rxnet.EventStore.Data.EventRecord link = 2;</code>
     */
    public function getLink()
    {
        return $this->link;
    }

    /**
     * <code>.Rxnet.EventStore.Data.EventRecord link = 2;</code>
     */
    public function setLink(&$var)
    {
        GPBUtil::checkMessage($var, \Rxnet\EventStore\Data\EventRecord::class);
        $this->link = $var;
    }

    /**
     * <code>int64 commit_position = 3;</code>
     */
    public function getCommitPosition()
    {
        return $this->commit_position;
    }

    /**
     * <code>int64 commit_position = 3;</code>
     */
    public function setCommitPosition($var)
    {
        GPBUtil::checkInt64($var);
        $this->commit_position = $var;
    }

    /**
     * <code>int64 prepare_position = 4;</code>
     */
    public function getPreparePosition()
    {
        return $this->prepare_position;
    }

    /**
     * <code>int64 prepare_position = 4;</code>
     */
    public function setPreparePosition($var)
    {
        GPBUtil::checkInt64($var);
        $this->prepare_position = $var;
    }

}

